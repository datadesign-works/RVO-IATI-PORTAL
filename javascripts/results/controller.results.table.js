(function () {
  'use strict';

  angular
    .module('oipa.countries')
    .controller('ResultsTableController', ResultsTableController);

  ResultsTableController.$inject = ['$scope'];

  function ResultsTableController($scope) {
    var vm = this;
    vm.isCollapsed = false;
    vm.indicators = $scope.indicators;
    vm.selectedGroup = $scope.selectedGroup;
    vm.selectedIndicators = $scope.selectedIndicators;
    vm.first = true;

    vm.resultIndicatorsSource = [
    	{
	    	indicatorName: "Number of jobs supported",
	    	displayName: "Number of jobs supported",
	    	header: true,
	    	children: [
	    		{
			    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Total",
			    	displayName: "Number of full-time (equivalent) direct jobs supported - Total",
			    	children: [
			    		{
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Female",
					    	displayName: "Female",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Young (15-25)",
					    	displayName: "Young (15-25)",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Rural",
					    	displayName: "Rural",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Urban",
					    	displayName: "Urban",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Vulnerable groups",
					    	displayName: "Vulnerable groups",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Fragile states",
					    	displayName: "Fragile states",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of full-time (equivalent) direct jobs supported - Senior positions",
					    	displayName: "Senior positions",
					    	children: []
					    },
			    	]
			    },
			    {
			    	indicatorName: "Number of full-time (equivalent) indirect jobs supported - Total",
			    	displayName: "Number of full-time (equivalent) indirect jobs supported - Total",
			    	children: []
			    },
	    	]
	    },
	    {
	    	indicatorName: "Number of companies with supported plans to invest or trade",
	    	displayName: "Number of companies with supported plans to invest or trade",
	    	header: true,
	    	children: [
	    		{
			    	indicatorName: "Number of companies with supported plans to invest or trade - Total",
			    	displayName: "Total",
			    	children: [
			    		{
					    	indicatorName: "Number of companies with supported plans to invest or trade - Dutch companies",
					    	displayName: "Dutch companies",
					    	children: []
					    },
					    {
					    	indicatorName: "Number of companies with supported plans to invest or trade - Local companies",
					    	displayName: "Local companies",
					    	children: [
					    		{
							    	indicatorName: "Number of companies with supported plans to invest or trade - Local female entrepreneurs",
							    	displayName: "Local female entrepreneurs",
							    	children: []
							    },
							    {
							    	indicatorName: "Number of companies with supported plans to invest or trade - Local young entrepreneurs <35 years",
							    	displayName: "Local young entrepreneurs <35 years",
							    	children: []
							    },
							    {
							    	indicatorName: "Number of companies with supported plans to invest or trade - Local entrepreneurs from fragile states",
							    	displayName: "Local entrepreneurs from fragile states",
							    	children: []
							    },
					    	]
					    },
					    {
					    	indicatorName: "Number of companies with supported plans to invest or trade - Other companies",
					    	displayName: "Other companies",
							children: []
					    },
			    	]
			    },
	    	]
	    },
	    {
	    	indicatorName: "Amount of co-investment generated by ODA",
	    	displayName: "Amount of co-investment generated by ODA",
	    	header:true,
	    	children: [
	    		{
			    	indicatorName: "Amount of co-investment generated by ODA - Total",
			    	displayName: "Total",
			    	children: [
			    		{	
			    			indicatorName: "Amount of co-investment generated by ODA - by private sector/companies",
					    	displayName: "by private sector/companies",
					    	children: []
					    },
			    		{
					    	indicatorName: "Amount of co-investment generated by ODA - by private sector/financial institutions",
					    	displayName: "by private sector/financial institutions",
					    	children: []
					    },
					    {
					    	indicatorName: "Amount of co-investment generated by ODA - by donors",
					    	displayName: "by donors",
					    	children: []
					    },
					    {
					    	indicatorName: "Amount of co-investment generated by ODA - by (local) government",
					    	displayName: "by (local) government",
					    	children: []
					    },
					    {
					    	indicatorName: "Amount of co-investment generated by ODA - by NGOs and foundations",
					    	displayName: "by NGOs and foundations",
					    	children: []
					    },
					    {
					    	indicatorName: "Amount of co-investment generated by ODA - by knowledge institutions",
					    	displayName: "by knowledge institutions",
					    	children: []
					    },
					    
			    	]
			    },
	    	]
	    },
    ];

    vm.setSelected = function(item){
    	var selectedIndicators = [];
    	var group = '';

    	// vm.selectedIndicators.push(item.indicatorName);
    	if(item.hasOwnProperty('header')){
    		group = item.indicatorName
    	} else {
    		group = vm.indicators[item.indicatorName].parent
    	}

    	console.log(vm.indicators);

    	// select group
    	selectedIndicators.push(group)
    	$scope.selectedGroup = group

    	// select underlying indicators
    	_.each(vm.indicators, function(value, key, obj) { 
    		if(obj[key].parent == group && obj[key].activity_count > 0){
    			selectedIndicators.push(key);
    		}
    	});

    	$scope.selectedIndicators = selectedIndicators;
    	vm.selectedIndicators = selectedIndicators;
    }

    vm.resultIndicators = angular.copy(vm.resultIndicatorsSource)

    vm.updateTable = function(){

    	function removeEmpty(tree, indicators){
    		// if count 0 and no header, remove key

    		tree = _.filter(tree, function(item){
    			var indicator = indicators[item.indicatorName]
    			var keep = (indicator.hasOwnProperty('header') || indicator.activity_count > 0) ? item : false;
    			return keep;
    		})
	        for (var i = 0;i < tree.length;i++){
	        	tree[i].children = removeEmpty(tree[i].children, indicators);
	        }

	        return tree;
	    }
	    var indicators = angular.copy(vm.indicators)
	    var indicatorTree = angular.copy(vm.resultIndicatorsSource)

	    indicators = removeEmpty(indicatorTree, indicators);
	    vm.resultIndicators = indicators
    }

    vm.toggleHideChildren = function($event) {
      var parent = $($event.target).closest('.parent') 
      var children = parent.next()
      parent.toggleClass('expanded').toggleClass('collapsed')
    }

    function activate() {
    	
    	$scope.$watch("indicators", function (indicators) {
    		console.log(indicators);
    		if(indicators != undefined){
    			vm.indicators = indicators;
    			if(vm.first){
    				vm.setSelected({indicatorName: "Number of jobs supported", header: true})
    				vm.first = false;
    			}
				vm.updateTable();
    		}
		}, true);
    }

    activate();
  }
})();